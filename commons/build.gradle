plugins {
  id 'java'
}

project.ext.javafxPlatform = "${javafxPlatform}"
if (javafxPlatform == "unspecified") {
  switch (org.gradle.internal.os.OperatingSystem.current()) {
    case org.gradle.internal.os.OperatingSystem.LINUX:
      project.ext.javafxPlatform = "linux"
      break
    case org.gradle.internal.os.OperatingSystem.MAC_OS:
      project.ext.javafxPlatform = "mac"
      break
    case org.gradle.internal.os.OperatingSystem.WINDOWS:
      project.ext.javafxPlatform = "win"
      break
  }
}

dependencies {
  compile("net.java.dev.jna:jna:${jnaVersion}")
  compile("net.java.dev.jna:jna-platform:${jnaVersion}")
  compile("com.nativelibs4java:bridj:${bridjVersion}")

  compile("org.openjfx:javafx-base:${javafxVersion}:${javafxPlatform}")
  compile("org.openjfx:javafx-controls:${javafxVersion}:${javafxPlatform}")
  compile("org.openjfx:javafx-graphics:${javafxVersion}:${javafxPlatform}")
  compile("org.openjfx:javafx-swing:${javafxVersion}:${javafxPlatform}")
  compile("org.openjfx:javafx-fxml:${javafxVersion}:${javafxPlatform}")
  compile("org.openjfx:javafx-web:${javafxVersion}:${javafxPlatform}")
  compile("org.openjfx:javafx-media:${javafxVersion}:${javafxPlatform}")

  compile("com.google.guava:guava:${guavaVersion}")


  compile("org.mapstruct:mapstruct-jdk8:${mapstructVersion}")
  annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
}
